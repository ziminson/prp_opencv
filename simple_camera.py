# подключаем библиотеку ОпенЦВ
# с помощью as имя импортируемого объекта можно переименовать и потом работать с ним
import cv2 as cv

# создаем объект, через который будем получать изображение с камеры
# 0 - первая камера. Например, вебка ноутбука. 
# Если подключить еще камеры, у них будут индексы 1, 2 и т.д.
# Так можно создать много объектов и работать с несколькими камерами 

cap = cv.VideoCapture(0)

# Если мы хотим поработать с видеофайлом, то передаем функции путь к файлу
# cap = cv.VideoCapture('vtest.avi')

# вызываем функцию isOpened. Если удалось подключиться к камере (вернет результат True), 
# то все ок, иначе напишем сообщение, о том, что беда и завершим работу проги
# с помощью функции exit()

# Если же работаем с видеофайлом - эта проверка не нужна (!!!)
if not cap.isOpened():
    print("Камера не открывается")
    exit()

#запускаем бесконечный цикл
while True:

# (!!!) А если работаем с видеофайлом, то код в теле цикла будет выполняться 
# ПОКА файл не проиграется до конца
# while cap.isOpened():

    # на каждом шаге цикла получаем новый кадр из объекта vid
    # функция read возвращает нам ответ, удалось или нет получить кадр с камеры (True или False)
    # (он сохраняется в переменную ret) И если удалось - возвращает кадр, который сохраняется в объект frame
    ret, frame = cap.read()

    # Если кадр прочитан (ret == true), то ОК
    # иначе напишем сообщение об ошибке и выйдем из цикла с помощью функции break
    if not ret:
        print("Не удалось получить кадр")
        break

    # Выводим на экран кадр
    # 'frame' - имя окна, в котором будет показан кадр
    # frame - собственно, объект, содержащий кадр
    cv.imshow('frame', frame)

    #ожидание нажатия кнопки. Если нажата q - выйти из цикла с помощью функции break
    if cv.waitKey(1) == ord('q'):
        break


# Когда наигрались, обязательно нужно отключиться от камеры
cap.release()
# и "поубивать" все созданные окошки
cv.destroyAllWindows()
